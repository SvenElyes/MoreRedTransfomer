# @package _global_

defaults:
  #- override /model: nnp
  - override /data: qm7x
  - override /task: diffusion_task
  - override /sampler: ddpm

run:
  experiment: vp_gauss_ddpm

globals:
  cutoff: 5.
  lr: 1e-4
  n_atom_basis: 256
  noise_target_key: eps
  noise_output_key: eps_pred
  time_target_key: t

  max_atoms:
    _target_: morered.utils.get_max_atoms
    #dataset: ${data}
  
  noise_schedule:
    _target_: morered.noise_schedules.PolynomialSchedule
    T: 1000
    s: 1e-5
    dtype: float64
    variance_type: lower_bound

  diffusion_process:
    _target_: morered.processes.VPGaussianDDPM
    noise_schedule: ${globals.noise_schedule}
    invariant: True 
    noise_key: ${globals.noise_target_key}
    dtype: float64

trainer:
  precision: 32
  gradient_clip_val: 0.5
  max_epochs: 10

data:
  batch_size: 4
  num_workers: 4
  pin_memory: True
  transforms:
    - _target_: schnetpack.transform.CastTo64
    - _target_: schnetpack.transform.SubtractCenterOfGeometry

    - _target_: morered.transform.Diffuse
      diffuse_property: _positions
      diffusion_process: ${globals.diffusion_process}
      time_key: ${globals.time_target_key}

    - _target_: morered.transform.AllToAllNeighborList
    - _target_: schnetpack.transform.CastTo32

model:
  _target_: morered.model.heads_pe.PairEncoder
  activation: gelu
  attention_dropout: 0.1
  cls_token: false
  decomposer_type: pooling
  embd_dim: 192
  ffn_dropout: 0.0
  ffn_multiplier: 4
  head_dropout: 0.0
  n_layers: 12
  norm: layer
  norm_first: true
  num_3d_kernels: 128
  num_heads: 12
  head_project_down: true
  output_key: ${globals.noise_output_key}
  include_time: True
  target_heads: ["forces"]
  time_head: null
  detach_time_head: False
  time_key: ${globals.time_target_key}
  #do_postprocessing: True
  #postprocessors:
  #- _target_: morered.transform.BatchSubtractCenterOfMass
  #  name: ${globals.noise_output_key}
  #- _target_: schnetpack.transform.CastTo64

task:
  diffuse_property: _positions
  skip_exploding_batches: True
  include_l0: False
  outputs:
    - _target_: morered.task.DiffModelOutput
      name: ${globals.noise_output_key}
      target_property: ${globals.noise_target_key}
      loss_fn:
        _target_: torch.nn.MSELoss
      metrics:
        mse:
          _target_: torchmetrics.regression.MeanSquaredError
          squared: True
      loss_weight: 1.0
      nll_metric: null
        # _target_: morered.optimization.metrics.NLL
        # noise_schedule: ${globals.noise_schedule}
        # diffuse_property: _positions
        # include_l0: True
        # include_lT: True
        # training: False
        # time_key: ${globals.time_target_key}
        # noise_key: ${globals.noise_target_key}
        # noise_pred_key: ${globals.noise_output_key}

sampler:
  denoiser: null

callbacks:
  sampling:
    t: null
    max_steps: null